# An admission controller is a piece of code that intercepts requests to the Kubernetes API server before the persistence of the object, but after the request is authenticated and authorized.
# Admission controllers can be used to validate, mutate, or reject requests to the API server.
# Admission controllers are typically used to enforce policies, such as requiring certain labels or annotations on objects, or to mutate requests to add default values.
# Admission controllers can also be used to enforce security policies, such as requiring certain security contexts or network policies.
### some popular admission controllers are:
# - NamespaceLifecycle: This admission controller is used to manage the lifecycle of namespaces in the cluster. It ensures that resources are not created in a namespace that is being deleted.
# - LimitRanger: This admission controller is used to enforce resource limits on pods and containers. It ensures that pods and containers do not exceed the specified resource limits.
# - ServiceAccount: This admission controller is used to automatically create and manage service accounts in the cluster. It ensures that pods have the necessary service accounts to access the Kubernetes API.
# - NodeRestriction: This admission controller is used to restrict the permissions of kubelets to only the nodes they are running on. It ensures that kubelets do not have access to resources on other nodes.
# - PodSecurityPolicy: This admission controller is used to enforce security policies on pods. It ensures that pods do not have excessive privileges or access to sensitive resources.
# - ValidatingAdmissionWebhook: This admission controller is used to validate requests to the API server using a webhook. It allows you to implement custom validation logic for your requests.
# - AlwaysPullImages: This admission controller is used to ensure that images are always pulled from the registry before being used. It ensures that the latest version of the image is always used.
# - DefaultStorageClass: This admission controller is used to set the default storage class for persistent volumes. It ensures that persistent volumes are created with the specified storage class.
# - ResourceQuota: This admission controller is used to enforce resource quotas on namespaces. It ensures that namespaces do not exceed the specified resource quotas.
# - EventRateLimit: This admission controller is used to limit the rate of events generated by the API server. It ensures that the API server does not become overwhelmed by too many events.
# - NamespaceExists: This admission controller is used to ensure that namespaces exist before creating resources in them. It ensures that resources are not created in non-existent namespaces.
# - NamespaceAutoProvision: This admission controller is used to automatically provision namespaces in the cluster. It ensures that namespaces are created when needed.

# To View the admission controllers that are enabled by default in the cluster, use the following command:
### kube-apiserver -h | grep enable-admission-plugins

# if you use kubeadm to create the cluster, you can find the applied admission controllers in the kube-apiserver.yaml file in the /etc/kubernetes/manifests directory.
# you could also run the following command to view the admission controllers:
# kubectl exec -it kube-apiserver-<node-name> -n kube-system -- kube-apiserver -h | grep enable-admission-plugins

## you can use the following command to view the applied admission controllers through the process:
# ps -ef | grep kube-apiserver | grep admission-plugins